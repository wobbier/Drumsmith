name: Windows

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]
        buildconfig: [Game_Win64, Editor]
        configuration:
          - Debug
          - Release
          - Retail
        include:
          - os: windows-2019
            shell: cmd
            compiler: cl
            target: Windows

    steps:
      - name: Add MSBuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2
        
      - name: Check out repo
        uses: actions/checkout@v2
        with:
          submodules: recursive
          
      - name: Install Mono
        shell: cmd
        run: choco install mono

      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0.100"
        
      - name: Generate third party solutions
        shell: cmd
        run: |
          cd Engine/ThirdParty
          call GenerateSolutions.bat
          cd ../../
          
      - name: Generate a new project
        shell: cmd
        run: dir && cd Project && dir && call GenerateSolution.bat && cd .. && dir

      - name: Copy Assets
        shell: cmd
        run: call CopyAssets.bat

      - name: Compile Tools
        if: ${{ matrix.buildconfig == 'Game_Win64' }}
        shell: cmd
        run: msbuild Drumsmith.sln /property:Configuration="Editor_Debug"

      - name: Compile Project
        shell: cmd
        run: msbuild Drumsmith.sln /property:Configuration="${{matrix.buildconfig}}_${{matrix.configuration}}"

      - name: Copy Assets
        shell: cmd
        run: call CopyAssets.bat

      - name: Copy Editor Assets
        shell: cmd
        continue-on-error: true
        run: |
          robocopy ".build/Release/Assets" ".build\\Editor_Debug\\Assets" *.* /w:0 /r:1 /v /E
          robocopy "Engine/Tools" ".build\\Editor_Debug\\Engine\\Tools" *.* /w:0 /r:1 /v /E

      - name: Archive Editor
        if: ${{ matrix.buildconfig == 'Editor' }}
        uses: actions/upload-artifact@v2
        with:
          name: Drumsmith v${{github.run_number}} - Editor
          path: |
            .build/${{matrix.buildconfig}}_${{matrix.configuration}}
            !.build/${{matrix.buildconfig}}_${{matrix.configuration}}/AppX
            !.build${{matrix.buildconfig}}_${{matrix.configuration}}/Tools/**/*.*
            !.build${{matrix.buildconfig}}_${{matrix.configuration}}/*.lib
            !.build${{matrix.buildconfig}}_${{matrix.configuration}}/*.pdb
            !.build${{matrix.buildconfig}}_${{matrix.configuration}}/*.exp
            !.build${{matrix.buildconfig}}_${{matrix.configuration}}/*.log
            .build/${{matrix.buildconfig}}_${{matrix.configuration}}/Tools/Optick.exe
            .build/${{matrix.buildconfig}}_${{matrix.configuration}}/Tools/Win64/*.*

      - name: Cook Assets
        if: ${{ matrix.buildconfig == 'Game_Win64' }}
        shell: cmd
        run: |
          cd ".build/Editor_Debug/"
          call Havana.exe -CompileAssets
          cd ../../

      - name: Archive ALL Assets
        if: ${{ matrix.buildconfig == 'Game_Win64' }}
        uses: actions/upload-artifact@v2
        with:
          name: Drumsmith v${{github.run_number}} - Game_Win64_${{matrix.configuration}} Raw Assets
          path: |
            .build/Editor_Debug/Assets

      - name: Copy Cooked Assets
        if: ${{ matrix.buildconfig == 'Game_Win64' }}
        shell: cmd
        continue-on-error: true
        run: |
          robocopy ".build/Editor_Debug/Assets" ".build\\Game_Win64_${{matrix.configuration}}\\Assets" *.* /w:0 /r:1 /v /E

      - name: Archive Build
        if: ${{ matrix.buildconfig == 'Game_Win64' }}
        uses: actions/upload-artifact@v2
        with:
          name: Drumsmith v${{github.run_number}} - ${{matrix.buildconfig}}_${{matrix.configuration}}
          path: |
            .build/${{matrix.buildconfig}}_${{matrix.configuration}}
            .build/${{matrix.buildconfig}}_${{matrix.configuration}}/Assets

      - name: Copy Tools Assets
        shell: cmd
        continue-on-error: true
        run: |
          robocopy "Engine/Tools/HUB/Assets" ".build\\Editor_Debug\\Assets" *.* /w:0 /r:1 /v /E
          robocopy "Engine/Tools/HUB" ".build\\Editor_Debug" *.exe /w:0 /r:1 /v /E

      - name: Archive Tools
        if: ${{ matrix.buildconfig == 'Editor' }}
        uses: actions/upload-artifact@v2
        with:
          name: HUB v${{github.run_number}}
          path: |
            .build/${{matrix.buildconfig}}_${{matrix.configuration}}/HUB.exe
            .build/${{matrix.buildconfig}}_${{matrix.configuration}}/Assets/Close.png
            .build/${{matrix.buildconfig}}_${{matrix.configuration}}/Assets/Minimize.png
            .build/${{matrix.buildconfig}}_${{matrix.configuration}}/Assets/VS.png
            .build/${{matrix.buildconfig}}_${{matrix.configuration}}/Assets/GEN.png
            .build/${{matrix.buildconfig}}_${{matrix.configuration}}/Assets/LOGO.png
            .build/${{matrix.buildconfig}}_${{matrix.configuration}}/shaderc.exe
            .build/${{matrix.buildconfig}}_${{matrix.configuration}}/texturec.exe
            .build/${{matrix.buildconfig}}_${{matrix.configuration}}/*.dll
            !.build/${{matrix.buildconfig}}_${{matrix.configuration}}/AppX
            !.build/${{matrix.buildconfig}}_${{matrix.configuration}}/Tools/**/*.*
            !.build/${{matrix.buildconfig}}_${{matrix.configuration}}/*.lib
            !.build/${{matrix.buildconfig}}_${{matrix.configuration}}/*.pdb
            !.build/${{matrix.buildconfig}}_${{matrix.configuration}}/*.exp
            !.build/${{matrix.buildconfig}}_${{matrix.configuration}}/*.log
            .build/${{matrix.buildconfig}}_${{matrix.configuration}}/Tools/Optick.exe
            .build/${{matrix.buildconfig}}_${{matrix.configuration}}/Tools/Win64/*.*
